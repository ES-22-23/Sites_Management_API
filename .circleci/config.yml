version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@8.1.3

jobs:
  build-artifact:
    machine: true
    steps:
      - checkout
      - run: 
          command: |
            mvn package -Dmaven.test.skip=true
      - run:
          name: Copy JAR file
          command: |
            mkdir -p ~/artifacts/
            cd ./target
            find . -name "*.jar" -exec cp {} ~/artifacts/ \;
      - store_artifacts:
          path: ~/artifacts
          destination: artifact-file

  build_and_push_image:
    machine: true
    steps:
      - aws-ecr/build-and-push-image:
          aws-access-key-id: AWS_ACCESS_KEY
          aws-secret-access-key: AWS_SECRET_KEY
          dockerfile: Dockerfile
          path: .
          registry-id: AWS_ECR_REGISTRY_ID
          platform: linux/amd64
          public-registry: false
          push-image: true
          region: eu-west-2
          repo: "es-22-23"
          tag: 'sites_management_api'

  test:
    machine: true 
    environment: 
      {"CODACY_PROJECT_TOKEN":9ad8eb74a4654417a0a879df076394b3}
    steps:
      - checkout
      - run: 
          command: |
            mvn verify
      - run:
          name: Save test results and code coverage report
          command: |
            mkdir -p ~/test-results/junit/
            mkdir -p ~/code-report/
            find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/test-results/junit/ \;
            find . -type f -regex ".*/target/failsafe-reports/.*xml" -exec cp {} ~/test-results/junit/ \;
            find . -type f -regex ".*/jacoco.xml" -exec cp {} ~/code-report/ \;
          when: always
      - run:
          name: Upload code coverage
          command: |
            bash <(curl -Ls https://coverage.codacy.com/get.sh)
      - store_test_results:
          path: ~/test-results/junit
      - store_artifacts:
          path: ~/code-report
  
workflows:
  build-and-test:
    jobs:
      - test
      - build-artifact
      - build_and_push_image:
          requires:
            - test
            - build-artifact
          filters:
            branches:
              only:
                - master
                - develop
